// MEDIA QUERY MANAGER

//320 - 600   Phone (normal styles in Mobile 1st approach)
//601 - 800   Tablet Portrait
//801 - 950   Tablet Landscape
//951 - 1200  Desktop
//1201px +     XL Desktop

//$breakpoint argument choices:
//- ]phone]
//- tabletPortrait
//- tabletLandscape
//- desktop
//- XL

// ORDER  Base + typography > general layout > grid > page layout > components

//1em = 16px*/

//$breakpoints:('tabletPortrait': (min-width: 601px), 'tabletLandscape': (min-width: 801px), 'desktop': (min-width: 950px), 'XL': (min-width: 1200px)) !default
$breakpoints:('tabletPortrait': (min-width: 37.5em), 'tabletLandscape': (min-width: 50em), 'desktop': (min-width: 59.375em), 'XL': (min-width: 75em)) !default
//$breakpoints: (
//	'tabletPortrait':  only screen and (min-width:  600px),            //37.5em)  // 600px /16px = 37.5em
//	'tabletLandscape': only screen and (min-width:  800px),    //50em) // 800px /16px = 50em
//	'desktop':  only screen and (min-width:  950px),  //59.375em)    // 950px /16px = 59.375em
//	'XL':  only screen and (min-width: 1200px)                //75em) // 1200px /16px = 75em
//) !default


/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond($breakpoint)
	// If the key exists in the map
	@if map-has-key($breakpoints, $breakpoint)
		// Prints a media query based on the value
		@media only screen and #{inspect(map-get($breakpoints, $breakpoint))}  // 414px /16px = 28.875em
			@content
	@else
	// If the key doesn't exist in the map
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
				+ "Available breakpoints are: #{map-keys($breakpoints)}."
